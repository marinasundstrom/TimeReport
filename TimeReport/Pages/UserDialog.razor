@using System.ComponentModel.DataAnnotations
@inject IUsersClient UsersClient

<EditForm Model="@this" OnValidSubmit="OnSubmit">
    <DataAnnotationsValidator />

    <MudDialog>
        <DialogContent>

            <MudTextField Label="First Name" Class="mb-6" Variant="Variant.Outlined" @bind-Value="FirstName" For="() => FirstName" />

            <MudTextField Label="Last Name" Class="mb-6" Variant="Variant.Outlined" @bind-Value="LastName" For="() => LastName" />

            <MudTextField Label="Display Name" Class="mb-6" Variant="Variant.Outlined" @bind-Value="DisplayName" For="() => DisplayName" />

        </DialogContent>

        <DialogActions>
            <MudButton OnClick="() => Modal.Cancel()">Cancel</MudButton>
            <MudButton ButtonType="ButtonType.Submit" Color="Color.Primary">@(UserId is null ? "Create" : "Save changes")</MudButton>
        </DialogActions>
    </MudDialog>

</EditForm>

@code {
    [CascadingParameter] MudDialogInstance Modal { get; set; }

    [Parameter] public string? UserId { get; set; }

    [Required]
    public string FirstName { get; set; }

    public string LastName { get; set; }

    public string? DisplayName { get; set; }

    protected override async Task OnInitializedAsync()
    {
        if(UserId is not null)
        {
            var result = await UsersClient.GetUserAsync(UserId);

            FirstName = result.FirstName;
            LastName = result.LastName;
            DisplayName = result.DisplayName;
        }
    }

    async Task OnSubmit()
    {
        UserDto? result = null;

        if (UserId is null)
        {
            result = await UsersClient.CreateUserAsync(new CreateUserDto
            {
                FirstName = FirstName,
                LastName = LastName,
                DisplayName = DisplayName
            });
        }
        else
        {
            result = await UsersClient.UpdateUserAsync(UserId, new UpdateUserDetailsDto
            {
                FirstName = FirstName,
                LastName = LastName,
                DisplayName = DisplayName
            }); 
        }

        Modal.Close(DialogResult.Ok(result));
    }
}